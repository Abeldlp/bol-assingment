version: "3.9"

services:
  #Database
  app-db:
    image: postgres
    container_name: app-db
    environment:
      POSTGRES_DB: "app-db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_ROOT_PASSWORD: "password"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d app-db -U user"]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "5432:5432"
    volumes:
      - app-db-volume:/var/lib/mysql

  #Client app
  # client:
  #   container_name: client-container
  #   build:
  #     dockerfile: ./Dockerfile
  #     context: ./client
  #   image: abeldlp/client
  #   env_file:
  #     - ./client/.env
  #   ports:
  #     - "3000:8080"
  #   depends_on:
  #     - api-service

  #Mancala API
  mancala-api:
    container_name: mancala-api-container
    build:
      dockerfile: ./Dockerfile
      context: ./mancala-api
    image: abeldlp/mancala-api
    env_file:
      - ./mancala-api/.env.docker
    volumes:
      - ./mancala-api/:/app
    ports:
      - "8000:8000"
    depends_on:
      app-db:
        condition: service_healthy

  #Api gateway
  api-gateway:
    container_name: mancala-api-gateway-container
    build:
      dockerfile: ./Dockerfile
      context: ./api-gateway
    image: abeldlp/api-gateway
    env_file:
      - ./api-gateway/.env.docker
    volumes:
      - ./api-gateway/:/app
    ports:
      - "5000:5000"
    depends_on:
      - mancala-api

  #User API
  # user-api:
  #   container_name: user-api-container
  #   build:
  #     dockerfile: ./Dockerfile
  #     context: ./user-api
  #   env_file:
  #     - ./user-api/.env.docker
  #   image: abeldlp/mancala-user-api
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     app-db:
  #       condition: service_healthy
  #   volumes:
  #     - ./user-api/:/app

  #Api service
  # api-service:
  #   container_name: api-service-container
  #   build:
  #     dockerfile: ./Dockerfile
  #     context: ./api-service
  #   env_file:
  #     - ./api-service/.env.docker
  #   image: abeldlp/api-service
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     app-db:
  #       condition: service_healthy

volumes:
  app-db-volume:
